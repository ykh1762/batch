<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 메모리상으로만 job meta 정보를 관리하는 repository. db에 정보를 저장하지 않고 간단하게
		 돌려보는 용도로 사용. -->
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"/>
	
	<!-- batch job을 실행할 launcher. -->
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"></property>
	</bean>

	<!-- 실제 트랜잭션은 발생하지 않지만 스프링 프레임워크 구성을 맞추기 위한 가짜 트랜잭션 매니저. -->
	<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

	<!-- batch itemReader, itemProcessor, itemWriter 스프링 등록. -->
	<bean id="helloReader" class="kr.or.ddit.batch.hello.HelloReader"/>
	<bean id="helloProcessor" class="kr.or.ddit.batch.hello.HelloProcessor"/>
	<bean id="helloWriter" class="kr.or.ddit.batch.hello.HelloWriter"/>

	<!-- batch job 등록. -->
	<batch:job id="helloJob" restartable="true">
		<batch:step id="step1" allow-start-if-complete="true">
			<batch:tasklet>
				<batch:chunk reader="helloReader" processor="helloProcessor" writer="helloWriter"
						commit-interval="2">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>


	<context:annotation-config/>

	<task:scheduler id="scheduler"/>	
	<task:executor id="executor"/>
	
	<bean id="helloTask" class="kr.or.ddit.batch.hello.HelloTask"/>
	
	<!-- @Scheduled 어노테이션을 찾아서 실행시켜줌. -->
	<task:annotation-driven scheduler="scheduler" executor="executor"/>


</beans>








